version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - WEBAPP_URL=${WEBAPP_URL}
      - DATABASE_URL=sqlite:////app/data/ssh_connections.db
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - bot-data:/app/data
    restart: always
    depends_on:
      - webapp
    networks:
      - tg-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  webapp:
    build:
      context: .
      dockerfile: webapp/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - DATABASE_URL=sqlite:////app/data/ssh_connections.db
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEBAPP_URL=${WEBAPP_URL}
    volumes:
      - bot-data:/app/data
    restart: always
    networks:
      - tg-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Cloudflared is commented out - use Coolify's built-in reverse proxy
  # Or configure Cloudflare tunnel separately pointing to your Coolify server
  # cloudflared:
  #   image: cloudflare/cloudflared:latest
  #   command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
  #   restart: always
  #   networks:
  #     - tg-network
  #   depends_on:
  #     - webapp

networks:
  tg-network:
    driver: bridge

volumes:
  bot-data: